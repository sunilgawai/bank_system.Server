generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Otp {
  id    String @id @default(uuid())
  otp   Int
  email String @unique()
}

model Customer {
  id                 String               @id @default(uuid())
  first_name         String
  middle_name        String
  last_name          String
  phone              String               @unique()
  email              String               @unique()
  password           String               @db.LongText()
  date_of_birth      String
  gender             String
  role               String?
  account            Account              @relation(fields: [account_id], references: [id])
  account_id         String
  address            Address              @relation(fields: [address_id], references: [id])
  address_id         String
  document           Document             @relation(fields: [document_id], references: [id])
  document_id        String
  AccountTransaction AccountTransaction[]
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt()
}

model Document {
  id              String     @id @default(uuid())
  document_type   String
  document_number String
  customerId      String?
  Account         Account[]
  Customer        Customer[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt()

  @@index([customerId], map: "Document_customerId_fkey")
}

enum document_type {
  PANCARD
  ADHAAR
  LICENSE
}

model Account {
  id                    String        @id @default(uuid())
  account_type          String
  account_number        String        @unique()
  ifsc_code             IFSC          @default(BANK0007)
  account_balance       String
  sent_transactions     Transaction[] @relation("TransactionSender")
  received_transactions Transaction[] @relation("TransactionReceiver")
  Document              Document      @relation(fields: [document_id], references: [id])
  document_id           String
  Customer              Customer[]
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt()
}

model AccountTransaction {
  id                 String   @id @default(uuid())
  customer           Customer @relation(fields: [customer_id], references: [id])
  customer_id        String
  transaction_type   String
  transaction_amount String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt()
}

model Transaction {
  id          String   @id @default(uuid())
  Sender      Account  @relation("TransactionSender", fields: [sender_id], references: [id])
  sender_id   String
  Receiver    Account  @relation("TransactionReceiver", fields: [receiver_id], references: [id])
  receiver_id String
  time        DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt()
}

model Address {
  id        String     @id @default(uuid())
  type      String
  country   Country?   @default(INDIA)
  state     String
  city      String
  district  String
  landmark  String
  Customer  Customer[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt()
}

// model City {
//   id          Int     @id @default(autoincrement())
//   name        String  @db.VarChar(100)
//   districtid  Int?
//   state_id    Int?
//   description String  @db.Text
//   status      String? @db.VarChar(10)
// }

// model District {
//   districtid           Int    @id @default(autoincrement())
//   district_title       String @db.VarChar(100)
//   state_id             Int?
//   district_description String @db.Text
//   district_status      String @db.VarChar(10)
// }

// model State {
//   state_id          Int    @id @default(autoincrement())
//   state_title       String @db.VarChar(100)
//   state_description String @db.Text
//   status            String @db.VarChar(10)
// }

enum IFSC {
  BANK0007
}

enum Country {
  INDIA
}

enum UserRole {
  ADMIN
  CUSTOMER
}
